close all;
clear
X_raw = load("../Datasets/2d-2c-no0.txt");
Color = load("../Datasets/2d-2c-no0_color.txt");
K =2;
sigma=1.0;
n=size(X_raw,1)
[P, v] = SensCNVT(Color);

% Standardization and Normalizationelliptical
B=repmat(v',n,1);
X = normalize(X_raw, 1);
X = X./repmat(sqrt(sum(X.^2,2)),1, size(X,2));
distM=squareform(pdist(X));
tmp = distM / (2 * sigma ^2);
W = exp(-tmp);
W(logical(eye(size(W))))=0;
%labels = spectralcluster(W,K,'Distance','precomputed','LaplacianNormalization','symmetric');

%labels=kmeans(X,K);

labels = randsrc(n,1,1:K);
Draw(X_raw,labels);
p1 =5700;

tic;
t1=clock;
[it,label,B] = afsc(X,labels, K,W, P,B, p1);
t2=clock;
time=etime(t2,t1)
toc;
Draw(X_raw,label);
% filename='elliptical_AFSC.txt';
% dlmwrite("elliptical_AFSC.txt",label)
Y = label2binary(label);

YY = Y'*Y;
PYYY = P'*Y/YY;
AW = 0;
for i = 1:size(PYYY, 2)
    tmp = YY(i, i) * ws_distance(PYYY(:, i), v);
    AW = AW + tmp;
end
it;

BAL = calcBAL(label, Color, K)';
bal=min(BAL)
%AW = AW/size(X,1);
%DI = dunns(K, distM, label);
SSE = calcSSE(X', label)
ncut=calNcut(K,W,label)